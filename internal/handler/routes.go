// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	admin "meg-backup-gozero/internal/handler/admin"
	doctor "meg-backup-gozero/internal/handler/doctor"
	download "meg-backup-gozero/internal/handler/download"
	preidct "meg-backup-gozero/internal/handler/preidct"
	test "meg-backup-gozero/internal/handler/test"
	"meg-backup-gozero/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/download/:filename",
				Handler: download.DownloadFileHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/predict",
				Handler: preidct.PredictHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/upload",
				Handler: preidct.UploadHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sm_upload",
				Handler: preidct.SmUploadHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sendpid",
				Handler: preidct.SendPidHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/getpid",
				Handler: preidct.GetPidHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: doctor.LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/register",
				Handler: doctor.RegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/quota_apply_remove",
				Handler: doctor.QuotaApplyRemoveHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/change_password",
				Handler: doctor.ChangePasswordHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/change_phonenumber",
				Handler: doctor.ChangePhoneNumberHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/change_email",
				Handler: doctor.ChangeEmailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/insert_doctor_info",
				Handler: doctor.InsertDoctorInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/get_doctor_info",
				Handler: doctor.GetDoctorInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/insert_case",
				Handler: doctor.InsertCaseHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/query_case",
				Handler: doctor.QueryCaseHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/get_data",
				Handler: doctor.GetDataHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/remove_file_path",
				Handler: doctor.RemoveFilePathHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/quota_apply_inquery",
				Handler: doctor.QuotaApplyInqueryHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/quota_inquiry",
				Handler: doctor.QuotaInquiryHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/getall",
				Handler: doctor.GetAllHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/get_patient_file_path",
				Handler: doctor.GetPatientFilePathHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/insert_patient",
				Handler: doctor.InsertPatientHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/information",
				Handler: admin.InformationHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/quota_apply_insert",
				Handler: admin.QuotaApplyInsertHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/get_all_data",
				Handler: admin.GetAllDataHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/remove_doctor",
				Handler: admin.RemoveDoctorHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/remove_patient",
				Handler: admin.RemovePatientHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/add_quota",
				Handler: admin.AddQuotaHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/admingetalldoctor",
				Handler: admin.AdminGetAllDoctorHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/test",
				Handler: test.TestHandler(serverCtx),
			},
		},
	)
}
